{"version":3,"sources":["app/initialize.ts","app/scenes/default.ts","app/scenes/testSpace.ts","app/utils/manipulatives.ts"],"names":[],"mappings":"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","file":"public/app.js","sourcesContent":["import {Main} from './scenes/default';\n\nconst game = new Phaser.Game(<any>{ // <any> works around the missing GameConfig.physics definition\n  // See <https://github.com/photonstorm/phaser/blob/master/src/boot/Config.js>\n  width: 800,\n  height: 600,\n  // zoom: 1,\n  // resolution: 1,\n  type: Phaser.AUTO,\n  // parent: null,\n  // canvas: null,\n  // canvasStyle: null,\n  // seed: null,\n  title: '☕️ Brunch with Phaser', // 'My Phaser 3 Game'\n  url: 'https://github.com/samme/brunch-phaser-typescript',\n  version: '0.0.1',\n  // input: {\n  //   keyboard: true,\n  //   mouse: true,\n  //   touch: true,\n  //   gamepad: false\n  // },\n  // disableContextMenu: false,\n  // banner: false\n  banner: {\n    // hidePhaser: false,\n    // text: 'white',\n    background: ['#e54661', '#ffa644', '#998a2f', '#2c594f', '#002d40']\n  },\n  // fps: {\n  //   min: 10,\n  //   target: 60,\n  //   forceSetTimeout: false,\n  // },\n  // pixelArt: false,\n  // transparent: false,\n  // clearBeforeRender: true,\n  // backgroundColor: 0x000000, // black\n  loader: {\n    // baseURL: '',\n    path: 'assets/',\n    maxParallelDownloads: 6,\n    // crossOrigin: 'anonymous',\n    // timeout: 0\n  },\n  physics: {\n    default: 'arcade',\n    arcade: {\n      gravity: {\n        y: 180\n      }\n    }\n  },\n  scene: Main,\n\n});\n","import {TestSpace} from \"./testSpace\"\nexport class Main extends Phaser.Scene{\n  constructor(){\n      super({\n          key:\"Main\"\n      })\n  }\n  preload(){\n    this.scene.add(\"TestSpace\", TestSpace, true);\n  }\n  create(){\n    this.add.text(100, 100, \"Hello, world!\")\n  }\n}","import {Manipulative, Bar} from \"../utils/manipulatives\";\nexport class TestSpace extends Phaser.Scene{\n    constructor(){\n        super({\n            key:\"TestSpace\"\n        })\n    }\n    preload=()=>{\n        this.load.image(\"obstacle\", \"obstacle.png\")\n        this.load.image(\"manipulative\", \"test_manipulative.png\");\n        this.load.atlas(\"dotcards\", \"atlas/dotcards.png\", \"atlas/dotcards.json\")\n        this.load.atlas(\"testing\", \"atlas/megasetHD-1.png\", \"atlas/megasetHD-1.json\")\n        this.load.audio(\"dropHit\", \"sounds/dropHit.mp3\", null, null)\n        this.load.audio(\"dropMiss\", \"sounds/dropMiss.mp3\", null, null)\n        this.load.audio(\"pickUp\", \"sounds/pickUp.mp3\", null, null)\n\n    }\n    create=()=>{\n        this.add.text(100, 200, \"Try to drag and drop the white bar onto the red circle:\");\n        this.add.image(400, 400, \"obstacle\");\n        let bar=new Bar(this, 10, \"manipulative\", {x:400, y:400, pullRadius:50, acceptedType:\"BAR\"})\n        bar.render(300, 300)\n    }\n}","export class Manipulative{\n    targetScene:any;\n    value:number;\n    type: ManipulativeType | string;\n    resourceKey:string;\n    onClick:()=>void;\n    onPointerDown:()=>void;\n    onPointerOver:()=>void;\n    onPointerOut:()=>void;\n\n    dragPoint:{\n        x:number,\n        y:number,\n        pullRadius:number\n        acceptedType:string | ManipulativeType\n    }\n\n    constructor(\n        theTargetScene:any,\n        aValue:number,\n        aType:ManipulativeType | string,\n        aResource:string,\n        aDragPoint:{\n            x:number,\n            y:number,\n            pullRadius:number,\n            acceptedType:string | ManipulativeType\n        },\n        clickCallback?:()=>void,\n        pointerdownCallback?:()=>void,\n        pointeroverCallback?:()=>void,\n        pointeroutCallback?:()=>void\n    ){\n        this.targetScene=theTargetScene;\n        this.value=aValue;\n        this.type=aType;\n        this.resourceKey=aResource;\n        this.onClick=clickCallback;\n        this.onPointerDown=pointerdownCallback;\n        this.onPointerOver=pointeroverCallback;\n        this.onPointerOut=pointeroutCallback;\n\n        this.dragPoint=aDragPoint\n\n    }\n    //the timeout function for the \n    // timeout:any;\n    // canFollowMouse:boolean=false;\n    // private checkDragging(spriteToCheck) {\n    //     spriteToCheck.on(\"pointerdown\", ()=>{\n    //         this.timeout=setTimeout(()=>{\n    //             this.canFollowMouse=true;\n                \n    //         }, 3000)\n    //     })\n    //     spriteToCheck.on(\"pointerup\", ()=>{\n    //         clearTimeout(this.timeout)\n    //     })\n    // }\n    // private followMouse(spriteToMove, sounds, originX, originY){\n    //     console.log(this.canFollowMouse)\n    //     spriteToMove.on(\"pointermove\", function(pointer){\n    //         if(this.canFollowMouse){\n    //             spriteToMove.x=pointer.x;\n    //             spriteToMove.y=pointer.y;\n    //         }\n    //     })\n    //     spriteToMove.on(\"pointerdown\", (pointer)=>{\n    //         if(this.canFollowMouse){\n    //             if((pointer.x >= this.dragPoint.x-this.dragPoint.pullRadius && pointer.x <= this.dragPoint.x+this.dragPoint.pullRadius) \n    //             && (pointer.y >=this.dragPoint.y-this.dragPoint.pullRadius && pointer.y <=this.dragPoint.y+this.dragPoint.pullRadius)){\n    //                     sounds[1].play();\n    //                     spriteToMove.x=this.dragPoint.x\n    //                     spriteToMove.y=this.dragPoint.y;         \n    \n    //             }\n    //             else{\n    //                 sounds[2].play();\n    //                 spriteToMove.x=originX;\n    //                 spriteToMove.y=originY;\n    //             } \n    //             this.canFollowMouse=false;\n    //         }\n  \n    //     })\n    // }\n    // private dragSprite(spriteToDrag, sounds:any[], originX, originY){\n    //         spriteToDrag.on('pointerover', function () {\n    //             this.setTint(\"0x555354\");\n    //         });\n        \n    //         spriteToDrag.on('pointerout', function () {\n    //             this.clearTint();\n    //         });\n    //         this.targetScene.input.setDraggable(spriteToDrag);\n        \n    //         this.targetScene.input.on('dragstart', function (pointer, gameObject) {\n    //             gameObject.setTint(0x555354);\n    //             sounds[0].play()\n    //         });\n        \n    //         this.targetScene.input.on('drag', function (pointer, gameObject, dragX, dragY) {\n    //             gameObject.x = dragX;\n    //             gameObject.y = dragY;\n    //             clearTimeout(this.timeout)\n                \n    //         });\n        \n    //         this.targetScene.input.on('dragend', (pointer, gameObject)=> {\n    //             gameObject.clearTint();\n    //             if((pointer.x >= this.dragPoint.x-this.dragPoint.pullRadius && pointer.x <= this.dragPoint.x+this.dragPoint.pullRadius) \n    //             && (pointer.y >=this.dragPoint.y-this.dragPoint.pullRadius && pointer.y <=this.dragPoint.y+this.dragPoint.pullRadius)){\n    //                     sounds[1].play();\n    //                     gameObject.x=this.dragPoint.x;\n    //                     gameObject.y=this.dragPoint.y;\n    //             }\n    //             else{\n    //                 sounds[2].play();\n    //                 gameObject.x=originX;\n    //                 gameObject.y=originY;\n    //             }\n    //             // dropHit.play()\n    //             // console.log(pointer.x, pointer.y)\n    //         });\n    // }\n\n    canFollow:number=0;\n    timeout;\n    private clickAndFollow(dragSprite, originX, originY){\n        dragSprite.on(\"pointerdown\", ()=>{\n            if(this.canFollow==0){\n                console.log(\"pointer down, starting follow....\")\n                this.canFollow=1;\n                \n            }\n            // if(this.canFollow==1 && this.checkBounds(dragSprite.x, dragSprite.y)){\n            //     dragSprite.x=this.dragPoint.x;\n            //     dragSprite.y=this.dragPoint.y;\n            //     clearTimeout(this.timeout);\n            //     this.canFollow=0\n            // }\n            // else{\n            //     this.canFollow=false;\n            // }\n        })\n        dragSprite.on(\"pointerup\", ()=>{\n            if(this.canFollow==1 && this.checkBounds(dragSprite.x, dragSprite.y)){\n                console.log(\"pointer up, cancelling follow\")\n                dragSprite.x=this.dragPoint.x;\n                dragSprite.y=this.dragPoint.y;\n                this.canFollow=0;\n            }\n            // else if(this.canFollow==1 && !this.checkBounds(dragSprite.x, dragSprite.y)){\n            //     dragSprite.x=originX;\n            //     dragSprite.y=originY;\n            //     this.canFollow=0;\n            // }\n        })\n        // this.targetScene.input.on(\"pointerup\", (pointer)=>{\n        //     this.timeout=setTimeout(()=>{\n        //         if(this.canFollow == 0 && this.checkBounds(pointer.x, pointer.y)){\n        //             dragSprite.x=this.dragPoint.x;\n        //             dragSprite.y=this.dragPoint.y;\n        //             this.canFollow=0;\n        //             clearTimeout(this.timeout)\n        //         }\n        //     }, 10000)\n\n        // })\n        this.targetScene.input.on(\"pointermove\", (pointer)=>{\n            if(this.canFollow > 0){\n                dragSprite.x=pointer.x;\n                dragSprite.y=pointer.y;\n                // if(this.checkBounds(pointer.x, pointer.y)){\n                //     if(!this.checkBounds(pointer.x, pointer.y)){\n                //         dragSprite.x=this.dragPoint.x;\n                //         dragSprite.y=this.dragPoint.y;\n                //         this.canFollow=0;\n                //     }\n       \n\n                // }\n            }\n        })\n    }\n    private checkBounds(x, y){\n        if((x >= this.dragPoint.x-this.dragPoint.pullRadius && x <= this.dragPoint.x+this.dragPoint.pullRadius) \n        && (y >=this.dragPoint.y-this.dragPoint.pullRadius && y <=this.dragPoint.y+this.dragPoint.pullRadius)){\n            return true;\n        }\n        else{\n            return false;\n        }\n    }\n    render(x, y, scale?){\n        console.log(\"render called!\")\n        let dragSprite = this.targetScene.add.sprite(x, y, this.resourceKey).setInteractive();\n        if(scale){\n            dragSprite.setScale(scale)\n        }\n        let pickUp=this.targetScene.sound.add(\"pickUp\")\n        let dropHit=this.targetScene.sound.add(\"dropHit\")\n        let dropMiss=this.targetScene.sound.add(\"dropMiss\")\n        \n        let isDragging=false;\n        this.clickAndFollow(dragSprite,x,y);\n\n    }\n\n}\nenum ManipulativeType{\n    BAR=\"BAR\",\n    DOTCARD=\"DOTCARD\",\n}\nexport class Bar extends Manipulative {\n\n    constructor(        \n        theTargetScene:any,\n        aValue:number,\n        aResource:string,\n        aDragPoint:{\n            x:number,\n            y:number,\n            pullRadius:number,\n            acceptedType:string | ManipulativeType\n        },\n        clickCallback?:()=>void,\n        pointerdownCallback?:()=>void,\n        pointeroverCallback?:()=>void,\n        pointerupCallback?:()=>void,){\n        super(theTargetScene, aValue, ManipulativeType.BAR, aResource, aDragPoint);\n\n        \n    }\n    //bar specific rendering method\n    render(x, y){\n        super.render(x, y);\n    }\n\n}\n// export class DotCard extends Manipulative{\n//     targetScene:Phaser.Scene;    \n//     value:number;\n//     type: ManipulativeType;\n//     onClick:()=>void;\n//     onPointerDown:()=>void;\n//     onPointerOver:()=>void;\n//     onPointerUp:()=>void;\n//     //dot card specific rendering method\n//     render(){\n\n//     }\n// }\n// export class Grid extends Manipulative{\n//     targetScene:Phaser.Scene;    \n//     value:number;\n//     type: ManipulativeType;\n//     onClick:()=>void;\n//     onPointerDown:()=>void;\n//     onPointerOver:()=>void;\n//     onPointerUp:()=>void;\n//     //grid specific rendering method\n//     render(){\n\n//     }\n// }\n// export class NumberLine extends Manipulative{\n//     targetScene:Phaser.Scene;    \n//     value:number;\n//     type: ManipulativeType;\n//     onClick:()=>void;\n//     onPointerDown:()=>void;\n//     onPointerOver:()=>void;\n//     onPointerUp:()=>void;\n//     //number line specific rendering method\n//     render(){\n\n//     }\n// }\n"]}