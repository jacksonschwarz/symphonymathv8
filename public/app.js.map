{"version":3,"sources":["app/initialize.ts","app/scenes/default.ts","app/scenes/testSpace.ts","app/utils/manipulatives.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,4CAAsC;AAEtC,IAAM,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,CAAM;IAChC,6EAA6E;IAC7E,KAAK,EAAE,GAAG;IACV,MAAM,EAAE,GAAG;IACX,WAAW;IACX,iBAAiB;IACjB,IAAI,EAAE,MAAM,CAAC,IAAI;IACjB,gBAAgB;IAChB,gBAAgB;IAChB,qBAAqB;IACrB,cAAc;IACd,KAAK,EAAE,uBAAuB;IAC9B,GAAG,EAAE,mDAAmD;IACxD,OAAO,EAAE,OAAO;IAChB,WAAW;IACX,oBAAoB;IACpB,iBAAiB;IACjB,iBAAiB;IACjB,mBAAmB;IACnB,KAAK;IACL,6BAA6B;IAC7B,gBAAgB;IAChB,MAAM,EAAE;QACN,qBAAqB;QACrB,iBAAiB;QACjB,UAAU,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;KACpE;IACD,SAAS;IACT,aAAa;IACb,gBAAgB;IAChB,4BAA4B;IAC5B,KAAK;IACL,mBAAmB;IACnB,sBAAsB;IACtB,2BAA2B;IAC3B,sCAAsC;IACtC,MAAM,EAAE;QACN,eAAe;QACf,IAAI,EAAE,SAAS;QACf,oBAAoB,EAAE,CAAC;KAGxB;IACD,OAAO,EAAE;QACP,OAAO,EAAE,QAAQ;QACjB,MAAM,EAAE;YACN,OAAO,EAAE;gBACP,CAAC,EAAE,GAAG;aACP;SACF;KACF;IACD,KAAK,EAAE,cAAI;CAEZ,CAAC,CAAC;;;;;;;;;;;ACvDH,yCAAqC;AACrC;IAA0B,wBAAY;IACpC;eACI,kBAAM;YACF,GAAG,EAAC,MAAM;SACb,CAAC;IACN,CAAC;IACD,sBAAO,GAAP;QACE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,EAAE,qBAAS,EAAE,IAAI,CAAC,CAAC;IAC/C,CAAC;IACD,qBAAM,GAAN;QACE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,eAAe,CAAC;IAC1C,CAAC;IACH,WAAC;AAAD,CAAC,CAZyB,MAAM,CAAC,KAAK,GAYrC;AAZY,oBAAI;;;;;;;;;;;ACDjB,wDAAyD;AACzD;IAA+B,6BAAY;IACvC;QAAA,YACI,kBAAM;YACF,GAAG,EAAC,WAAW;SAClB,CAAC,SACL;QACD,aAAO,GAAC;YACJ,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,cAAc,CAAC;YAC3C,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;YACzD,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,oBAAoB,EAAE,qBAAqB,CAAC;YACxE,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,uBAAuB,EAAE,wBAAwB,CAAC;YAC7E,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,oBAAoB,EAAE,IAAI,EAAE,IAAI,CAAC;YAC5D,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,qBAAqB,EAAE,IAAI,EAAE,IAAI,CAAC;YAC9D,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,mBAAmB,EAAE,IAAI,EAAE,IAAI,CAAC;QAE9D,CAAC;QACD,YAAM,GAAC;YACH,KAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,yDAAyD,CAAC,CAAC;YACnF,KAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;YACrC,IAAI,GAAG,GAAC,IAAI,mBAAG,CAAC,KAAI,EAAE,EAAE,EAAE,cAAc,EAAE,EAAC,CAAC,EAAC,GAAG,EAAE,CAAC,EAAC,GAAG,EAAE,UAAU,EAAC,EAAE,EAAC,CAAC;YACxE,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC;QACxB,CAAC;;IAhBD,CAAC;IAiBL,gBAAC;AAAD,CAAC,CAtB8B,MAAM,CAAC,KAAK,GAsB1C;AAtBY,8BAAS;;;;;;;;;;;ACDtB;IAgBI,sBACI,cAAkB,EAClB,MAAa,EACb,KAA+B,EAC/B,SAAgB,EAChB,UAIC,EACD,aAAuB,EACvB,mBAA6B,EAC7B,mBAA6B,EAC7B,kBAA4B;QAE5B,IAAI,CAAC,WAAW,GAAC,cAAc,CAAC;QAChC,IAAI,CAAC,KAAK,GAAC,MAAM,CAAC;QAClB,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;QAChB,IAAI,CAAC,WAAW,GAAC,SAAS,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAC,aAAa,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAC,mBAAmB,CAAC;QACvC,IAAI,CAAC,aAAa,GAAC,mBAAmB,CAAC;QACvC,IAAI,CAAC,YAAY,GAAC,kBAAkB,CAAC;QAErC,IAAI,CAAC,SAAS,GAAC,UAAU;IAE7B,CAAC;IACD,6BAAM,GAAN,UAAO,CAAC,EAAE,CAAC;QAAX,iBA+CC;QA9CG,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,cAAc,EAAE,CAAC;QACrF,IAAI,MAAM,GAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;QAC/C,IAAI,OAAO,GAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC;QACjD,IAAI,QAAQ,GAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC;QAEnD,+CAA+C;QAC/C,KAAK,CAAC,EAAE,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,KAAK,CAAC,EAAE,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAE3C,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,UAAU,OAAO,EAAE,UAAU;YAChE,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC7B,MAAM,CAAC,IAAI,EAAE;QACjB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK;YACzE,UAAU,CAAC,CAAC,GAAG,KAAK,CAAC;YACrB,UAAU,CAAC,CAAC,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,OAAO,EAAE,UAAU;YACrD,UAAU,CAAC,SAAS,EAAE,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC;YAC3B,EAAE,EAAC,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI,CAAC,SAAS,CAAC,CAAC,GAAC,KAAI,CAAC,SAAS,CAAC,UAAU,IAAI,OAAO,CAAC,CAAC,IAAI,KAAI,CAAC,SAAS,CAAC,CAAC,GAAC,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC;mBACpH,CAAC,OAAO,CAAC,CAAC,IAAG,KAAI,CAAC,SAAS,CAAC,CAAC,GAAC,KAAI,CAAC,SAAS,CAAC,UAAU,IAAI,OAAO,CAAC,CAAC,IAAG,KAAI,CAAC,SAAS,CAAC,CAAC,GAAC,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,EAAC;gBAC/G,OAAO,CAAC,IAAI,EAAE,CAAC;gBACf,UAAU,CAAC,CAAC,GAAC,KAAI,CAAC,SAAS,CAAC,CAAC;gBAC7B,UAAU,CAAC,CAAC,GAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAEtC,CAAC;YACD,IAAI,EAAC;gBACD,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAChB,UAAU,CAAC,CAAC,GAAC,CAAC,CAAC;gBACf,UAAU,CAAC,CAAC,GAAC,CAAC,CAAC;YACnB,CAAC;YACD,iBAAiB;YACjB,oCAAoC;QACxC,CAAC,CAAC,CAAC;IACP,CAAC;IAEL,mBAAC;AAAD,CAAC;AA5FY,oCAAY;AA6FzB,IAAK,gBAGJ;AAHD,WAAK,gBAAgB;IACjB,2CAAI,KAAK;IACT,+CAAQ,SAAS;AACrB,CAAC,EAHI,gBAAgB,KAAhB,gBAAgB,QAGpB;AACD;IAAyB,uBAAY;IAEjC,aACI,cAAkB,EAClB,MAAa,EACb,SAAgB,EAChB,UAIC,EACD,aAAuB,EACvB,mBAA6B,EAC7B,mBAA6B,EAC7B,iBAA2B;eAC3B,kBAAM,cAAc,EAAE,MAAM,EAAE,gBAAgB,CAAC,GAAG,EAAE,SAAS,EAAE,UAAU,CAAC;IAG9E,CAAC;IACD,+BAA+B;IAC/B,oBAAM,GAAN,UAAO,CAAC,EAAE,CAAC;QACP,iBAAM,MAAM,YAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvB,CAAC;IAEL,UAAC;AAAD,CAAC,CAxBwB,YAAY,GAwBpC;AAxBY,kBAAG;AAyBhB,6CAA6C;AAC7C,oCAAoC;AACpC,oBAAoB;AACpB,8BAA8B;AAC9B,wBAAwB;AACxB,8BAA8B;AAC9B,8BAA8B;AAC9B,4BAA4B;AAC5B,2CAA2C;AAC3C,gBAAgB;AAEhB,QAAQ;AACR,IAAI;AACJ,0CAA0C;AAC1C,oCAAoC;AACpC,oBAAoB;AACpB,8BAA8B;AAC9B,wBAAwB;AACxB,8BAA8B;AAC9B,8BAA8B;AAC9B,4BAA4B;AAC5B,uCAAuC;AACvC,gBAAgB;AAEhB,QAAQ;AACR,IAAI;AACJ,gDAAgD;AAChD,oCAAoC;AACpC,oBAAoB;AACpB,8BAA8B;AAC9B,wBAAwB;AACxB,8BAA8B;AAC9B,8BAA8B;AAC9B,4BAA4B;AAC5B,8CAA8C;AAC9C,gBAAgB;AAEhB,QAAQ;AACR,IAAI","file":"public/app.js","sourcesContent":["import {Main} from './scenes/default';\n\nconst game = new Phaser.Game(<any>{ // <any> works around the missing GameConfig.physics definition\n  // See <https://github.com/photonstorm/phaser/blob/master/src/boot/Config.js>\n  width: 800,\n  height: 600,\n  // zoom: 1,\n  // resolution: 1,\n  type: Phaser.AUTO,\n  // parent: null,\n  // canvas: null,\n  // canvasStyle: null,\n  // seed: null,\n  title: '☕️ Brunch with Phaser', // 'My Phaser 3 Game'\n  url: 'https://github.com/samme/brunch-phaser-typescript',\n  version: '0.0.1',\n  // input: {\n  //   keyboard: true,\n  //   mouse: true,\n  //   touch: true,\n  //   gamepad: false\n  // },\n  // disableContextMenu: false,\n  // banner: false\n  banner: {\n    // hidePhaser: false,\n    // text: 'white',\n    background: ['#e54661', '#ffa644', '#998a2f', '#2c594f', '#002d40']\n  },\n  // fps: {\n  //   min: 10,\n  //   target: 60,\n  //   forceSetTimeout: false,\n  // },\n  // pixelArt: false,\n  // transparent: false,\n  // clearBeforeRender: true,\n  // backgroundColor: 0x000000, // black\n  loader: {\n    // baseURL: '',\n    path: 'assets/',\n    maxParallelDownloads: 6,\n    // crossOrigin: 'anonymous',\n    // timeout: 0\n  },\n  physics: {\n    default: 'arcade',\n    arcade: {\n      gravity: {\n        y: 180\n      }\n    }\n  },\n  scene: Main,\n\n});\n","import {TestSpace} from \"./testSpace\"\nexport class Main extends Phaser.Scene{\n  constructor(){\n      super({\n          key:\"Main\"\n      })\n  }\n  preload(){\n    this.scene.add(\"TestSpace\", TestSpace, true);\n  }\n  create(){\n    this.add.text(100, 100, \"Hello, world!\")\n  }\n}","import {Manipulative, Bar} from \"../utils/manipulatives\";\nexport class TestSpace extends Phaser.Scene{\n    constructor(){\n        super({\n            key:\"TestSpace\"\n        })\n    }\n    preload=()=>{\n        this.load.image(\"obstacle\", \"obstacle.png\")\n        this.load.image(\"manipulative\", \"test_manipulative.png\");\n        this.load.atlas(\"dotcards\", \"atlas/dotcards.png\", \"atlas/dotcards.json\")\n        this.load.atlas(\"testing\", \"atlas/megasetHD-1.png\", \"atlas/megasetHD-1.json\")\n        this.load.audio(\"dropHit\", \"sounds/dropHit.mp3\", null, null)\n        this.load.audio(\"dropMiss\", \"sounds/dropMiss.mp3\", null, null)\n        this.load.audio(\"pickUp\", \"sounds/pickUp.mp3\", null, null)\n\n    }\n    create=()=>{\n        this.add.text(100, 200, \"Try to drag and drop the white bar onto the red circle:\");\n        this.add.image(400, 400, \"obstacle\");\n        let bar=new Bar(this, 10, \"manipulative\", {x:400, y:400, pullRadius:50})\n        bar.render(300, 300)\n    }\n}","export class Manipulative{\n    targetScene:any;\n    value:number;\n    type: ManipulativeType | string;\n    resourceKey:string;\n    onClick:()=>void;\n    onPointerDown:()=>void;\n    onPointerOver:()=>void;\n    onPointerOut:()=>void;\n\n    dragPoint:{\n        x:number,\n        y:number,\n        pullRadius:number\n    }\n\n    constructor(\n        theTargetScene:any,\n        aValue:number,\n        aType:ManipulativeType | string,\n        aResource:string,\n        aDragPoint:{\n            x:number,\n            y:number,\n            pullRadius:number\n        },\n        clickCallback?:()=>void,\n        pointerdownCallback?:()=>void,\n        pointeroverCallback?:()=>void,\n        pointeroutCallback?:()=>void\n    ){\n        this.targetScene=theTargetScene;\n        this.value=aValue;\n        this.type=aType;\n        this.resourceKey=aResource;\n        this.onClick=clickCallback;\n        this.onPointerDown=pointerdownCallback;\n        this.onPointerOver=pointeroverCallback;\n        this.onPointerOut=pointeroutCallback;\n\n        this.dragPoint=aDragPoint\n\n    }\n    render(x, y){\n        console.log(\"render called!\")\n        var image = this.targetScene.add.sprite(200, 300, this.resourceKey).setInteractive();\n        let pickUp=this.targetScene.sound.add(\"pickUp\")\n        let dropHit=this.targetScene.sound.add(\"dropHit\")\n        let dropMiss=this.targetScene.sound.add(\"dropMiss\")\n        \n        // let emitter=new Phaser.Events.EventEmitter()\n        image.on('pointerover', function () {\n            this.setTint(\"0x555354\");\n        });\n    \n        image.on('pointerout', function () {\n            this.clearTint();\n        });\n    \n        this.targetScene.input.setDraggable(image);\n    \n        this.targetScene.input.on('dragstart', function (pointer, gameObject) {\n            gameObject.setTint(0x555354);\n            pickUp.play()\n        });\n    \n        this.targetScene.input.on('drag', function (pointer, gameObject, dragX, dragY) {\n            gameObject.x = dragX;\n            gameObject.y = dragY;\n        });\n    \n        this.targetScene.input.on('dragend', (pointer, gameObject)=> {\n            gameObject.clearTint();\n            console.log(pointer.x, pointer.y)\n            console.log(this.dragPoint)\n            if((pointer.x >= this.dragPoint.x-this.dragPoint.pullRadius && pointer.x <= this.dragPoint.x+this.dragPoint.pullRadius) \n            && (pointer.y >=this.dragPoint.y-this.dragPoint.pullRadius && pointer.y <=this.dragPoint.y+this.dragPoint.pullRadius)){\n                    dropHit.play();\n                    gameObject.x=this.dragPoint.x\n                    gameObject.y=this.dragPoint.y;         \n\n            }\n            else{\n                dropMiss.play();\n                gameObject.x=x;\n                gameObject.y=y;\n            }\n            // dropHit.play()\n            // console.log(pointer.x, pointer.y)\n        });\n    }\n\n}\nenum ManipulativeType{\n    BAR=\"BAR\",\n    DOTCARD=\"DOTCARD\",\n}\nexport class Bar extends Manipulative {\n\n    constructor(        \n        theTargetScene:any,\n        aValue:number,\n        aResource:string,\n        aDragPoint:{\n            x:number,\n            y:number,\n            pullRadius:number,\n        },\n        clickCallback?:()=>void,\n        pointerdownCallback?:()=>void,\n        pointeroverCallback?:()=>void,\n        pointerupCallback?:()=>void,){\n        super(theTargetScene, aValue, ManipulativeType.BAR, aResource, aDragPoint);\n\n        \n    }\n    //bar specific rendering method\n    render(x, y){\n        super.render(x, y);\n    }\n\n}\n// export class DotCard extends Manipulative{\n//     targetScene:Phaser.Scene;    \n//     value:number;\n//     type: ManipulativeType;\n//     onClick:()=>void;\n//     onPointerDown:()=>void;\n//     onPointerOver:()=>void;\n//     onPointerUp:()=>void;\n//     //dot card specific rendering method\n//     render(){\n\n//     }\n// }\n// export class Grid extends Manipulative{\n//     targetScene:Phaser.Scene;    \n//     value:number;\n//     type: ManipulativeType;\n//     onClick:()=>void;\n//     onPointerDown:()=>void;\n//     onPointerOver:()=>void;\n//     onPointerUp:()=>void;\n//     //grid specific rendering method\n//     render(){\n\n//     }\n// }\n// export class NumberLine extends Manipulative{\n//     targetScene:Phaser.Scene;    \n//     value:number;\n//     type: ManipulativeType;\n//     onClick:()=>void;\n//     onPointerDown:()=>void;\n//     onPointerOver:()=>void;\n//     onPointerUp:()=>void;\n//     //number line specific rendering method\n//     render(){\n\n//     }\n// }\n"]}